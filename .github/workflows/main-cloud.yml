# This is a basic workflow to help you get started with Actions

name: CI with Xray (cloud)

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:

  # This workflow contains a single job called "test"
  test:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - name: Setup .NET Core SDK
        uses: actions/setup-dotnet@v1.9.0
        with:
          dotnet-version: 5.0.201  
#      - name: Setup Chrome
#        uses: browser-actions/setup-chrome@v0.0.0
#      - name: setup-chromedriver
#        uses: nanasess/setup-chromedriver@v1.0.1
      - name: generate auxiliary JSON for authenticating with Xray cloud and obtain token
        run: |
          cd net5.0/Calculator.Specs
          cat cloud_auth.json.sample  | sed s/CLIENT_ID/${{ secrets.XRAYCLOUD_CLIENT_ID }}/g | sed s/CLIENT_SECRET/${{ secrets.XRAYCLOUD_CLIENT_SECRET }}/g > cloud_auth.json
          echo token=$(curl -H "Content-Type: application/json" -X POST --data @"cloud_auth.json" ${{ secrets.XRAYCLOUD_BASE_URL }}/api/v2/authenticate| tr -d '"') >> $GITHUB_ENV
      - name: Export scenarios from Xray and generate .feature file(s)
        run: |
          cd net5.0/Calculator.Specs
          FEATURES_FILE=features.zip
          rm -f $FEATURES_FILE
          curl -H "Content-Type: application/json" -X GET -H "Authorization: Bearer ${{ env.token }}" "${{ secrets.XRAYCLOUD_BASE_URL }}/api/v2/export/cucumber?keys=${{ secrets.XRAYCLOUD_ISSUE_KEYS_TO_EXPORT_FROM }}" -o $FEATURES_FILE
          rm -f Features/*.feature Features/*.cs
          unzip -o $FEATURES_FILE  -d Features
      - name: Run tests
        run: cd net5.0/Calculator.Specs && dotnet test
      - name: generate auxiliary JSON to define some fields on the Test Execution to be created
        run: |
          cd net5.0/Calculator.Specs
          cat testexec_cloud_template.json  | sed s/PROJECT_KEY/${{ secrets.JIRACLOUD_PROJECT_KEY }}/g | sed s/TEST_ENVIRONMENT_NAME/jdk${{ env.JDK_VERSION }}/g | sed s/TESTPLAN_KEY/${{ secrets.XRAYCLOUD_TEST_PLAN_KEY }}/g > test_exec.json
      - name: "Import results to Xray (cloud) using multipart endpoint"
        run: |
          cd net5.0/Calculator.Specs
          curl -X POST -H "Authorization: Bearer ${{ env.token }}"  -F info=@test_exec.json -F results=@"TestResults/cucumber.json" "${{ secrets.XRAYCLOUD_BASE_URL }}/api/v2/import/execution/cucumber/multipart"