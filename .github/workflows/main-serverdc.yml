# This is a basic workflow to help you get started with Actions

name: CI with Xray (server/DC)

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:

  # This workflow contains a single job called "test"
  test:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - name: Setup .NET Core SDK
        uses: actions/setup-dotnet@v1.9.0
        with:
          dotnet-version: 5.0.201  
#      - name: Setup Chrome
#        uses: browser-actions/setup-chrome@v0.0.0
#      - name: setup-chromedriver
#        uses: nanasess/setup-chromedriver@v1.0.1
      - name: Export scenarios from Xray and generate .feature file(s)
        run: |
          FEATURES_FILE=features.zip
          cd net5.0/Calculator.Specs
          rm -f $FEATURES_FILE
          curl -u ${{ secrets.JIRASERVER_USERNAME }}:${{ secrets.JIRASERVER_PASSWORD }}  "${{ secrets.JIRASERVER_BASE_URL }}/rest/raven/2.0/export/test?keys=${{ secrets.XRAYSERVER_ISSUE_KEYS_TO_EXPORT_FROM }}&fz=true" -o $FEATURES_FILE
          rm -f Features/*.feature Features/*.cs
          unzip -o $FEATURES_FILE  -d Features
      - name: Run tests
        run: cd net5.0/Calculator.Specs && dotnet test
      - name: generate auxiliary file to define fields on the Test Execution
        run: |
          cd net5.0/Calculator.Specs
          cat testexec_template.json  | sed s/PROJECT_KEY/${{ secrets.JIRASERVER_PROJECT_KEY }}/g | sed s/CF_TEST_ENVIRONMENT/${{ secrets.JIRASERVER_CF_TEST_ENVIRONMENTS }}/g |  sed s/TEST_ENVIRONMENT_NAME//g | sed s/CF_TEST_PLAN/${{ secrets.JIRASERVER_CF_TEST_PLAN }}/g  | sed s/TESTPLAN_KEY/${{ secrets.XRAYSERVER_TEST_PLAN_KEY }}/g > test_exec.json
      - name: "Import results to Xray (server/DC) using multipart endpoint"
        run: |
          cd net5.0/Calculator.Specs
          curl -X POST -u ${{ secrets.JIRASERVER_USERNAME }}:${{ secrets.JIRASERVER_PASSWORD }} -F info=@test_exec.json -F result=@"TestResults/cucumber.json" ${{ secrets.JIRASERVER_BASE_URL }}/rest/raven/2.0/import/execution/cucumber/multipart